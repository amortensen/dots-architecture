<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.7 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY I-D.ietf-dots-requirements SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dots-requirements.xml">
<!ENTITY I-D.ietf-dots-use-cases SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dots-use-cases.xml">
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC0793 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0793.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2782 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2782.xml">
<!ENTITY RFC3235 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3235.xml">
<!ENTITY RFC3261 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC4271 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4271.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
<!ENTITY RFC4786 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4786.xml">
<!ENTITY RFC5246 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY RFC5389 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5389.xml">
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY RFC7092 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7092.xml">
<!ENTITY RFC7094 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7094.xml">
<!ENTITY RFC8085 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8085.xml">
]>

<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc docmapping="yes"?>

<rfc docName="draft-ietf-dots-architecture-06" category="info">

  <front>
    <title abbrev="DOTS Architecture">Distributed-Denial-of-Service Open Threat Signaling (DOTS) Architecture</title>

    <author initials="A." surname="Mortensen" fullname="Andrew Mortensen">
      <organization>Arbor Networks</organization>
      <address>
        <postal>
          <street>2727 S. State St</street>
          <city>Ann Arbor, MI</city>
          <code>48104</code>
          <country>United States</country>
        </postal>
        <email>amortensen@arbor.net</email>
      </address>
    </author>
    <author initials="F." surname="Andreasen" fullname="Flemming Andreasen">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <country>United States</country>
        </postal>
        <email>fandreas@cisco.com</email>
      </address>
    </author>
    <author initials="T." surname="Reddy" fullname="Tirumaleswar Reddy">
      <organization>McAfee, Inc.</organization>
      <address>
        <postal>
          <street>Embassy Golf Link Business Park</street>
          <city>Bangalore, Karnataka</city>
          <code>560071</code>
          <country>India</country>
        </postal>
        <email>tireddy@cisco.com</email>
      </address>
    </author>
    <author initials="C." surname="Gray" fullname="Christopher Gray">
      <organization></organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <country>United States</country>
        </postal>
        <email>Christopher_Gray3@cable.comcast.com</email>
      </address>
    </author>
    <author initials="R." surname="Compton" fullname="Rich Compton">
      <organization>Charter</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
        </postal>
        <email>Rich.Compton@charter.com</email>
      </address>
    </author>
    <author initials="N." surname="Teague" fullname="Nik Teague">
      <organization>Verisign</organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <country>United States</country>
        </postal>
        <email>nteague@verisign.com</email>
      </address>
    </author>

    <date year="2018" month="March" day="20"/>

    <area>Security</area>
    <workgroup>DOTS</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document describes an architecture for establishing and maintaining
Distributed Denial of Service (DDoS) Open Threat Signaling (DOTS) within and
between domains. The document does not specify protocols or protocol
extensions, instead focusing on defining architectural relationships, components
and concepts used in a DOTS deployment.</t>



    </abstract>


  </front>

  <middle>


<section anchor="context-and-motivation" title="Context and Motivation">

<t>Signaling the need for help defending against an active distributed denial
of service (DDoS) attack requires a common understanding of mechanisms and
roles among the parties coordinating defensive response. The signaling
layer and supplementary messaging is the focus of DDoS Open Threat Signaling
(DOTS). DOTS defines a method of coordinating defensive measures among willing
peers to mitigate attacks quickly and efficiently, enabling hybrid attack
responses coordinated locally at or near the target of an active attack, or
anywhere in-path between attack sources and target. Sample DOTS use cases
are elaborated in <xref target="I-D.ietf-dots-use-cases"></xref>.</t>

<t>This document describes an architecture used in establishing, maintaining or
terminating a DOTS relationship within a domain or between domains.</t>

<section anchor="terminology" title="Terminology">

<section anchor="key-words" title="Key Words">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="definition-of-terms" title="Definition of Terms">

<t>This document uses the terms defined in <xref target="I-D.ietf-dots-requirements"></xref>.</t>

</section>
</section>
<section anchor="scope" title="Scope">

<t>In this architecture, DOTS clients and servers communicate using DOTS signaling.
As a result of signals from a DOTS client, the DOTS server may modify the
forwarding path of traffic destined for the attack target(s), for example by
diverting traffic to a mitigator or pool of mitigators, where policy may be
applied to distinguish and discard attack traffic. Any such policy is
deployment-specific.</t>

<t>The DOTS architecture presented here is applicable across network administrative
domains &#8211; for example, between an enterprise domain and the domain of a
third-party attack mitigation service &#8211; as well as to a single administrative
domain. DOTS is generally assumed to be most effective when aiding coordination
of attack response between two or more participating networks, but single
domain scenarios are valuable in their own right, as when aggregating
intra-domain DOTS client signals for inter-domain coordinated attack response.</t>

<t>This document does not address any administrative or business agreements that
may be established between involved DOTS parties. Those considerations are out
of scope. Regardless, this document assumes necessary authentication and
authorization mechanisms are put in place so that only authorized clients can
invoke the DOTS service.</t>

<t>A detailed set of DOTS requirements are discussed in
<xref target="I-D.ietf-dots-requirements"></xref>, and the DOTS architecture is designed to follow
those requirements. Only new behavioral requirements are described in this
document.</t>

</section>
<section anchor="assumptions" title="Assumptions">

<t>This document makes the following assumptions:</t>

<t><list style="symbols">
  <t>All domains in which DOTS is deployed are assumed to offer the required
connectivity between DOTS agents and any intermediary network elements, but
the architecture imposes no additional limitations on the form of
connectivity.</t>
  <t>Congestion and resource exhaustion are intended outcomes of a DDoS attack
<xref target="RFC4732"/>. Some operators may utilize non-impacted paths or networks for
DOTS, but in general conditions should be assumed to be hostile and DOTS
must be able to function in all circumstances, including when the signaling
path is significantly impaired.</t>
  <t>There is no universal DDoS attack scale threshold triggering a coordinated
response across administrative domains. A network domain administrator, or
service or application owner may arbitrarily set attack scale threshold
triggers, or manually send requests for mitigation.</t>
  <t>Mitigation requests may be sent to one or more upstream DOTS servers based on
criteria determined by DOTS client administrators and the underlying network
configuration. The number of DOTS servers with which a given DOTS client has
established communications is determined by local policy and is
deployment-specific. For example, a DOTS client of a multi-homed network may
support built-in policies to establish DOTS relationships with DOTS servers
located upstream of each interconnection link.</t>
  <t>The mitigation capacity and/or capability of domains receiving requests for
coordinated attack response is opaque to the domains sending the request. The
domain receiving the DOTS client signal may or may not have sufficient
capacity or capability to filter any or all DDoS attack traffic directed at
a target. In either case, the upstream DOTS server may redirect a request to
another DOTS server. Redirection may be local to the redirecting DOTS server's
domain, or may involve a third-party domain.</t>
  <t>DOTS client and server signals, as well as messages sent through the data
channel, are sent across any transit networks with the same probability of
delivery as any other traffic between the DOTS client domain and the DOTS
server domain. Any encapsulation required for successful delivery is left
untouched by transit network elements. DOTS server and DOTS client cannot
assume any preferential treatment of DOTS signals. Such preferential treatment
may be available in some deployments (e.g., intra-domain scenarios), and the
DOTS architecture does not preclude its use when available. However, DOTS
itself does not address how that may be done.</t>
  <t>The architecture allows for, but does not assume, the presence of Quality of
Service (QoS) policy agreements between DOTS-enabled peer networks or local
QoS prioritization aimed at ensuring delivery of DOTS messages between DOTS
agents. QoS is an operational consideration only, not a functional part of
the DOTS architecture.</t>
  <t>The signal and data channels are loosely coupled, and may not terminate on
the same DOTS server.</t>
</list></t>

</section>
</section>
<section anchor="architecture" title="DOTS Architecture">

<t>The basic high-level DOTS architecture is illustrated in <xref target="fig-basic-arch"/>:</t>

<figure title="Basic DOTS Architecture" anchor="fig-basic-arch"><artwork><![CDATA[
    +-----------+            +-------------+
    | Mitigator | ~~~~~~~~~~ | DOTS Server |
    +-----------+            +-------------+
                                    |
                                    |
                                    |
    +---------------+        +-------------+
    | Attack Target | ~~~~~~ | DOTS Client |
    +---------------+        +-------------+
]]></artwork></figure>

<t>A simple example instantiation of the DOTS architecture could be an enterprise
as the attack target for a volumetric DDoS attack, and an upstream DDoS
mitigation service as the mitigator. The enterprise (attack target) is
connected to the Internet via a link that is getting saturated, and the
enterprise suspects it is under DDoS attack. The enterprise has a DOTS client,
which obtains information about the DDoS attack, and signals the DOTS server
for help in mitigating the attack. The DOTS server in turn invokes one or more
mitigators, which are tasked with mitigating the actual DDoS attack, and hence
aim to suppress the attack traffic while allowing valid traffic to reach the
attack target.</t>

<t>The scope of the DOTS specifications is the interfaces between the DOTS
client and DOTS server. The interfaces to the attack target and the mitigator
are out of scope of DOTS. Similarly, the operation of both the attack target and
the mitigator is out of scope of DOTS. Thus, DOTS neither specifies how an
attack target decides it is under DDoS attack, nor does DOTS specify how a
mitigator may actually mitigate such an attack. A DOTS client's request for
mitigation is advisory in nature, and may not lead to any mitigation at all,
depending on the DOTS server domain's capacity and willingness to mitigate on
behalf of the DOTS client's domain.</t>

<t>The DOTS client may be provided with a list of DOTS servers, each associated
with one or more IP addresses. These addresses may or may not be of the same
address family. The DOTS client establishes one or more sessions by connecting
to the provided DOTS server addresses.</t>

<t>As illustrated in <xref target="fig-interfaces"/>, there are two interfaces between a
DOTS server and a DOTS client; a signal channel and (optionally) a data channel.</t>

<figure title="DOTS Interfaces" anchor="fig-interfaces"><artwork><![CDATA[
    +---------------+                                 +---------------+
    |               | <------- Signal Channel ------> |               |
    |  DOTS Client  |                                 |  DOTS Server  |
    |               | <=======  Data Channel  ======> |               |
    +---------------+                                 +---------------+
]]></artwork></figure>

<t>The primary purpose of the signal channel is for a DOTS client to ask a
DOTS server for help in mitigating an attack, and for the DOTS server to inform
the DOTS client about the status of such mitigation. The DOTS client does this
by sending a client signal, which contains information about the attack
target(s). The client signal may also include telemetry information about the
attack, if the DOTS client has such information available. The DOTS server in
turn sends a server signal to inform the DOTS client of whether it will honor
the mitigation request. Assuming it will, the DOTS server initiates attack
mitigation, and periodically informs the DOTS client about the status of the
mitigation.  Similarly, the DOTS client periodically informs the DOTS server
about the client's status, which at a minimum provides client (attack target)
health information, but it should also include efficacy information about the
attack mitigation as it is now seen by the client. At some point, the DOTS
client may decide to terminate the server-side attack mitigation, which it
indicates to the DOTS server over the signal channel. A mitigation may also be
terminated if a DOTS client-specified mitigation lifetime is exceeded. Note that
the signal channel may need to operate over a link that is experiencing a DDoS
attack and hence is subject to severe packet loss and high latency.</t>

<t>While DOTS is able to request mitigation with just the signal channel, the
addition of the DOTS data channel provides for additional and more efficient
capabilities. The primary purpose of the data channel is to support DOTS related
configuration and policy information exchange between the DOTS client and the
DOTS server. Examples of such information include, but are not limited to:</t>

<t><list style="symbols">
  <t>Creating identifiers, such as names or aliases, for resources for which
mitigation may be requested. Such identifiers may then be used in subsequent
signal channel exchanges to refer more efficiently to the resources under
attack, as seen in <xref target="fig-resource-identifiers"/>, using JSON to serialize the
data:</t>
</list></t>

<figure title="Protected resource identifiers" anchor="fig-resource-identifiers"><artwork><![CDATA[
        {
            "https1": [
                "192.0.2.1:443",
                "198.51.100.2:443",
            ],
            "proxies": [
                "203.0.113.3:3128",
                "[2001:db8:ac10::1]:3128"
            ],
            "api_urls": "https://apiserver.example.com/api/v1",
        }
]]></artwork></figure>

<t><list style="symbols">
  <t>Black-list management, which enables a DOTS client to inform the DOTS server
about sources to suppress.</t>
  <t>White-list management, which enables a DOTS client to inform the DOTS server
about sources from which traffic is always accepted.</t>
  <t>Filter management, which enables a DOTS client to install or remove traffic
filters dropping or rate-limiting unwanted traffic.</t>
  <t>DOTS client provisioning.</t>
</list></t>

<t>Note that while it is possible to exchange the above information before, during
or after a DDoS attack, DOTS requires reliable delivery of this information and
does not provide any special means for ensuring timely delivery of it during an
attack. In practice, this means that DOTS deployments should not rely on such
information being exchanged during a DDoS attack.</t>

<section anchor="operations" title="DOTS Operations">
<t>DOTS does not prescribe any specific deployment models, however DOTS is designed
with some specific requirements around the different DOTS agents and their
relationships.</t>

<t>First of all, a DOTS agent belongs to a domain that has an identity which can be
authenticated and authorized. DOTS agents communicate with each other over a
mutually authenticated signal channel and (optionally) data channel. However,
before they can do so, a service relationship needs to be established between
them.  The details and means by which this is done is outside the scope of DOTS,
however an example would be for an enterprise A (DOTS client) to sign up for
DDoS service from provider B (DOTS server). This would establish a (service)
relationship between the two that enables enterprise A's DOTS client to
establish a signal channel with provider B's DOTS server. A and B will
authenticate each other, and B can verify that A is authorized for its service.</t>

<t>From an operational and design point of view, DOTS assumes that the above
relationship is established prior to a request for DDoS attack mitigation. In
particular, it is assumed that bi-directional communication is possible at this
time between the DOTS client and DOTS server. Furthermore, it is assumed that
additional service provisioning, configuration and information exchange can be
performed by use of the data channel, if operationally required. It is not until
this point that the mitigation service is available for use.</t>

<t>Once the mutually authenticated signal channel has been established, it will
remain active. This is done to increase the likelihood that the DOTS client
can signal the DOTS server for help when the attack target is being flooded,
and similarly raise the probability that DOTS server signals reach the client
regardless of inbound link congestion.  This does not necessarily imply that the
attack target and the DOTS client have to be co-located in the same
administrative domain, but it is expected to be a common scenario.</t>

<t>DDoS mitigation with the help of an upstream mitigator may involve some
form of traffic redirection whereby traffic destined for the attack target is
steered towards the mitigator. Common mechanisms to achieve this redirection
depend on BGP <xref target="RFC4271"></xref> and DNS <xref target="RFC1035"></xref>. The mitigator in turn inspects and
scrubs the traffic, and forwards the resulting (hopefully non-attack) traffic to
the attack target. Thus, when a DOTS server receives an attack mitigation
request from a DOTS client, it can be viewed as a way of causing traffic
redirection for the attack target indicated.</t>

<t>DOTS relies on mutual authentication and the pre-established service
relationship between the DOTS client's domain and the DOTS server's domain to
provide basic authorization. The DOTS server should enforce additional
authorization mechanisms to restrict the mitigation scope a DOTS client can
request, but such authorization mechanisms are deployment-specific.</t>

<t>Although co-location of DOTS server and mitigator within the same domain is
expected to be a common deployment model, it is assumed that operators may
require alternative models. Nothing in this document precludes such
alternatives.</t>

</section>
<section anchor="components" title="Components">

<section anchor="dots-client" title="DOTS Client">

<t>A DOTS client is a DOTS agent from which requests for help coordinating attack
response originate. The requests may be in response to an active, ongoing
attack against a target in the DOTS client's domain, but no active attack is
required for a DOTS client to request help. Operators may wish to have upstream
mitigators in the network path for an indefinite period, and are restricted only
by business relationships when it comes to duration and scope of requested
mitigation.</t>

<t>The DOTS client requests attack response coordination from a DOTS server over
the signal channel, including in the request the DOTS client's desired
mitigation scoping, as described in <xref target="I-D.ietf-dots-requirements"></xref>. The actual
mitigation scope and countermeasures used in response to the attack are up to
the DOTS server and mitigator operators, as the DOTS client may have a narrow
perspective on the ongoing attack. As such, the DOTS client's request for
mitigation should be considered advisory: guarantees of DOTS server availability
or mitigation capacity constitute service level agreements and are out of scope
for this document.</t>

<t>The DOTS client adjusts mitigation scope and provides available mitigation
feedback (e.g. mitigation efficacy) at the direction of its local administrator.
Such direction may involve manual or automated adjustments in response to
updates from the DOTS server.</t>

<t>To provide a metric of signal health and distinguish an idle signal channel
from a disconnected or defunct session, the DOTS client sends a heartbeat over
the signal channel to maintain its half of the channel. The DOTS client
similarly expects a heartbeat from the DOTS server, and may consider a session
terminated in the extended absence of a DOTS server heartbeat.</t>

</section>
<section anchor="dots-server" title="DOTS Server">

<t>A DOTS server is a DOTS agent capable of receiving, processing and possibly
acting on requests for help coordinating attack response from DOTS clients.  The
DOTS server authenticates and authorizes DOTS clients as described in
<xref target="dots-sessions"/>, and maintains session state, tracking requests for
mitigation, reporting on the status of active mitigations, and terminating
sessions in the extended absence of a client heartbeat or when a session times
out.</t>

<t>Assuming the preconditions discussed below exist, a DOTS client maintaining an
active session with a DOTS server may reasonably expect some level of mitigation
in response to a request for coordinated attack response.</t>

<t>The DOTS server enforces authorization of DOTS clients' signals for mitigation.
The mechanism of enforcement is not in scope for this document, but is expected
to restrict requested mitigation scope to addresses, prefixes, and/or services
owned by the DOTS client's administrative domain, such that a DOTS client from
one domain is not able to influence the network path to another domain. A DOTS
server MUST reject requests for mitigation of resources not owned by the
requesting DOTS client's administrative domain. A DOTS server MAY also refuse a
DOTS client's mitigation request for arbitrary reasons, within any limits
imposed by business or service level agreements between client and server
domains. If a DOTS server refuses a DOTS client's request for mitigation, the
DOTS server SHOULD include the refusal reason in the server signal sent to the
client.</t>

<t>A DOTS server is in regular contact with one or more mitigators. If a DOTS
server accepts a DOTS client's request for help, the DOTS server forwards a
translated form of that request to the mitigator(s) responsible for scrubbing
attack traffic. Note that the form of the translated request passed from the
DOTS server to the mitigator is not in scope: it may be as simple as an alert to
mitigator operators, or highly automated using vendor or open application
programming interfaces supported by the mitigator. The DOTS server MUST report
the actual scope of any mitigation enabled on behalf of a client.</t>

<t>The DOTS server SHOULD retrieve available metrics for any mitigations activated
on behalf of a DOTS client, and SHOULD include them in server signals sent to
the DOTS client originating the request for mitigation.</t>

<t>To provide a metric of signal health and distinguish an idle signal channel
from a disconnected or defunct channel, the DOTS server MUST send a heartbeat
over the signal channel to maintain its half of the channel. The DOTS server
similarly expects a heartbeat from the DOTS client, and MAY consider a session
terminated in the extended absence of a DOTS client heartbeat.</t>

</section>
<section anchor="dots-gateway" title="DOTS Gateway">

<t>Traditional client/server relationships may be expanded by chaining DOTS
sessions. This chaining is enabled through "logical concatenation" of a DOTS
server and a DOTS client, resulting in an application analogous to the Session
Initiation Protocol (SIP) <xref target="RFC3261"/> logical entity of a Back-to-Back User
Agent (B2BUA) <xref target="RFC7092"></xref>. The term DOTS gateway is used here in the descriptions
of selected scenarios involving this application.</t>

<t>A DOTS gateway may be deployed client-side, server-side or both.  The gateway
may terminate multiple discrete client connections and may aggregate these into
a single or multiple DOTS sessions.</t>

<t>The DOTS gateway will appear as a server to its downstream agents and as a
client to its upstream agents, a functional concatenation of the DOTS client and
server roles, as depicted in <xref target="fig-dots-gateway"/>:</t>

<figure title="DOTS gateway" anchor="fig-dots-gateway"><artwork><![CDATA[
                      +-------------+
                      |    | D |    |
      +----+          |    | O |    |         +----+
      | c1 |----------| s1 | T | c2 |---------| s2 |
      +----+          |    | S |    |         +----+
                      |    | G |    |
                      +-------------+
]]></artwork></figure>

<t>The DOTS gateway MUST perform full stack DOTS session termination and
reorigination between its client and server side. The details of how this is
achieved are implementation specific. The DOTS protocol does not include any
special features related to DOTS gateways, and hence from a DOTS perspective,
whenever a DOTS gateway is present, the DOTS session simply
terminates/originates there.</t>

</section>
</section>
<section anchor="agent-relationships" title="DOTS Agent Relationships">

<t>So far, we have only considered a relatively simple scenario of a single DOTS
client associated with a single DOTS server, however DOTS supports more advanced
relationships.</t>

<t>A DOTS server may be associated with one or more DOTS clients, and those DOTS
clients may belong to different domains. An example scenario is a mitigation
provider serving multiple attack targets (<xref target="fig-multi-client-server"/>).</t>

<figure title="DOTS server with multiple clients" anchor="fig-multi-client-server"><artwork><![CDATA[
   DOTS clients       DOTS server
   +---+
   | c |-----------
   +---+           \
   c1.example.org   \
                     \
   +---+              \ +---+
   | c |----------------| S |
   +---+              / +---+
   c1.example.com    /  dots1.example.net
                    /
   +---+           /
   | c |-----------
   +---+
   c2.example.com
]]></artwork></figure>

<t>A DOTS client may be associated with one or more DOTS servers, and those DOTS
servers may belong to different domains.  This may be to ensure high
availability or co-ordinate mitigation with more than one directly connected
ISP.  An example scenario is for an enterprise to have DDoS mitigation service
from multiple providers, as shown in <xref target="fig-multi-homed-client"/>.</t>

<figure title="Multi-Homed DOTS Client" anchor="fig-multi-homed-client"><artwork><![CDATA[
   DOTS client        DOTS servers
                       +---+
            -----------| S |
           /           +---+
          /            dots1.example.net
         /
   +---+/              +---+
   | c |---------------| S |
   +---+\              +---+
         \             dots.example.org
          \
           \           +---+
            -----------| S |
                       +---+
   c.example.com       dots2.example.net
]]></artwork></figure>

<t>Deploying a multi-homed client requires extra care and planning, as the DOTS
servers with which the multi-homed client communicates may not be affiliated.
Should the multi-homed client simultaneously request for mitigation from all
servers with which it has established signal channels, the client may
unintentionally inflict additional network disruption on the resources it
intends to protect. In one of the worst cases, a multi-homed DOTS client could
cause a permanent routing loop of traffic destined for the client's
protected services, as the uncoordinated DOTS servers' mitigators all try to
divert that traffic to their own scrubbing centers.</t>

<t>The DOTS protocol itself provides no fool-proof method to prevent such
self-inflicted harms as a result deploying multi-homed DOTS clients. If
DOTS client implementations nevertheless include support for multi-homing, they
are expected to be aware of the risks, and consequently to include measures
aimed at reducing the likelihood of negative outcomes. Simple measures might
include:</t>

<t><list style="symbols">
  <t>Requesting mitigation serially, ensuring only one mitigation request for
a given address space is active at any given time;</t>
  <t>Dividing the protected resources among the DOTS servers, such that no two
mitigators will be attempting to divert and scrub the same traffic;</t>
  <t>Restricting multi-homing to deployments in which all DOTS servers are
coordinating management of a shared pool of mitigation resources.</t>
</list></t>

<section anchor="gatewayed-signaling" title="Gatewayed Signaling">

<t>As discussed in <xref target="dots-gateway"/>, a DOTS gateway is a logical function chaining
DOTS sessions through concatenation of a DOTS server and DOTS client.</t>

<t>An example scenario, as shown in <xref target="fig-client-gateway-agg"/> and
<xref target="fig-client-gateway-noagg"/>, is for an enterprise to have deployed multiple
DOTS capable devices which are able to signal intra-domain using TCP <xref target="RFC0793"></xref>
on un-congested links to a DOTS gateway which may then transform these to a UDP
<xref target="RFC0768"></xref> transport inter-domain where connection oriented transports may
degrade; this applies to the signal channel only, as the data channel requires a
connection-oriented transport. The relationship between the gateway and its
upstream agents is opaque to the initial clients.</t>

<figure title="Client-Side Gateway with Aggregation" anchor="fig-client-gateway-agg"><artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----TCP-----| D |               +---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------UDP------| S |
      +---+                | S |               |   |
             /-----TCP-----| G |               +---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.com           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork></figure>

<figure title="Client-Side Gateway without Aggregation" anchor="fig-client-gateway-noagg"><artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----TCP-----| D |------UDP------+---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------UDP------| S |
      +---+                | S |               |   |
             /-----TCP-----| G |------UDP------+---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.com           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork></figure>

<t>This may similarly be deployed in the inverse scenario where the gateway resides
in the server-side domain and may be used to terminate and/or aggregate multiple
clients to single transport as shown in figures <xref target="fig-server-gateway-agg"/> and
<xref target="fig-server-gateway-noagg"/>.</t>

<figure title="Server-Side Gateway with Aggregation" anchor="fig-server-gateway-agg"><artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----UDP-----| D |               +---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------TCP------| S |
      +---+                | S |               |   |
             /-----TCP-----| G |               +---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.net           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork></figure>

<figure title="Server-Side Gateway without Aggregation" anchor="fig-server-gateway-noagg"><artwork><![CDATA[
      +---+
      | c |\
      +---+ \              +---+
             \-----UDP-----| D |------TCP------+---+
      +---+                | O |               |   |
      | c |--------TCP-----| T |------TCP------| S |
      +---+                | S |               |   |
             /-----UDP-----| G |------TCP------+---+
      +---+ /              +---+
      | c |/
      +---+
      example.com       example.net           example.net
      DOTS clients      DOTS gateway (DOTSG)  DOTS server
]]></artwork></figure>

<t>This document anticipates scenarios involving multiple DOTS gateways. An example
is a DOTS gateway at the network client's side, and another one at the server
side. The first gateway can be located at a CPE to aggregate requests from
multiple DOTS clients enabled in an enterprise network. The second DOTS gateway
is deployed on the provider side. This scenario can be seen as a combination of
the client-side and server-side scenarios.</t>

</section>
</section>
</section>
<section anchor="concepts" title="Concepts">

<section anchor="dots-sessions" title="DOTS Sessions">

<t>In order for DOTS to be effective as a vehicle for DDoS mitigation requests,
one or more DOTS clients must establish ongoing communication with one or more
DOTS servers. While the preconditions for enabling DOTS in or among network
domains may also involve business relationships, service level agreements, or
other formal or informal understandings between network operators, such
considerations are out of scope for this document.</t>

<t>A DOTS session is established to support bilateral exchange of data between an
associated DOTS client and a DOTS server. In the DOTS architecture, data is
exchanged between DOTS agents over signal and data channels. Regardless, a DOTS
session is characterized by the presence of an established signal channel. A
data channel may be established as well, however it is not a prerequisite.
Conversely, a DOTS session cannot exist without an established signal channel:
when an established signal channel is terminated for any reason, the DOTS
session is also said to be terminated.</t>

<section anchor="dots-session-preconditions" title="Preconditions">

<t>Prior to establishing a DOTS session between agents, the owners of the networks,
domains, services or applications involved are assumed to have agreed upon the
terms of the relationship involved. Such agreements are out of scope for this
document, but must be in place for a functional DOTS architecture.</t>

<t>It is assumed that as part of any DOTS service agreement, the DOTS client is
provided with all data and metadata required to establish communication with the
DOTS server. Such data and metadata would include any cryptographic information
necessary to meet the message confidentiality, integrity and authenticity
requirement in <xref target="I-D.ietf-dots-requirements"></xref>, and might also include the pool of
DOTS server addresses and ports the DOTS client should use for signal and data
channel messaging.</t>

</section>
<section anchor="establishing-dots-session" title="Establishing the DOTS Session">

<t>With the required business agreements in place, the DOTS client
initiates a signal session by contacting its DOTS server(s) over the signal
channel and (possibly) the data channel. To allow for DOTS service flexibility,
neither the order of contact nor the time interval between channel creations is
specified. A DOTS client MAY establish signal channel first, and then data
channel, or vice versa.</t>

<t>The methods by which a DOTS client receives the address and associated service
details of the DOTS server are not prescribed by this document. For example, a
DOTS client may be directly configured to use a specific DOTS server IP address
and port, and directly provided with any data necessary to satisfy the Peer
Mutual Authentication requirement in <xref target="I-D.ietf-dots-requirements"></xref>, such as
symmetric or asymmetric keys, usernames and passwords, etc. All configuration
and authentication information in this scenario is provided out-of-band by the
domain operating the DOTS server.</t>

<t>At the other extreme, the architecture in this document allows for a form of
DOTS client auto-provisioning. For example, the domain operating the DOTS server
or servers might provide the client domain only with symmetric or asymmetric
keys to authenticate the provisioned DOTS clients. Only the keys would then be
directly configured on DOTS clients, but the remaining configuration required to
provision the DOTS clients could be learned through mechanisms similar to DNS
SRV <xref target="RFC2782"/> or DNS Service Discovery <xref target="RFC6763"/>.</t>

<t>The DOTS client SHOULD successfully authenticate and exchange messages with the
DOTS server over both signal and (if used) data channel as soon as possible to
confirm that both channels are operational.</t>

<t>As described in <xref target="I-D.ietf-dots-requirements"></xref>, the DOTS client can configure
preferred values for acceptable signal loss, mitigation lifetime, and heartbeat
intervals when establishing the DOTS session. A DOTS session is not active until
DOTS agents have agreed on the values for these DOTS session parameters, a
process defined by the protocol.</t>

<t>Once the DOTS client begins receiving DOTS server signals, the DOTS session
is active. At any time during the DOTS session, the DOTS client may use the
data channel to manage aliases, manage black- and white-listed
prefixes or addresses, leverage vendor-specific extensions, and so on. Note that
unlike the signal channel, there is no requirement that the data channel remains
operational in attack conditions (See Data Channel Requirements,
<xref target="I-D.ietf-dots-requirements"></xref>).</t>

</section>
<section anchor="maintaining-dots-session" title="Maintaining the DOTS Session">

<t>DOTS clients and servers periodically send heartbeats to each other over the
signal channel, per Operational Requirements discussed in
<xref target="I-D.ietf-dots-requirements"></xref>. DOTS agent operators SHOULD configure the
heartbeat interval such that the frequency does not lead to accidental denials
of service due to the overwhelming number of heartbeats a DOTS agent must field.</t>

<t>Either DOTS agent may consider a DOTS session terminated in the extended
absence of a heartbeat from its peer agent. The period of that absence will be
established in the protocol definition.</t>

</section>
</section>
<section anchor="modes-of-signaling" title="Modes of Signaling">

<t>This section examines the modes of signaling between agents in a DOTS
architecture.</t>

<section anchor="direct-signaling" title="Direct Signaling">

<t>A DOTS session may take the form of direct signaling between the DOTS
clients and servers, as shown in <xref target="fig-direct-signaling"/>.</t>

<figure title="Direct Signaling" anchor="fig-direct-signaling"><artwork><![CDATA[
        +-------------+                            +-------------+
        | DOTS client |<------signal session------>| DOTS server |
        +-------------+                            +-------------+
]]></artwork></figure>

<t>In a direct DOTS session, the DOTS client and server are communicating directly.
Direct signaling may exist inter- or intra-domain. The DOTS session is
abstracted from the underlying networks or network elements the signals
traverse: in direct signaling, the DOTS client and server are logically
adjacent.</t>

</section>
<section anchor="redirected-signaling" title="Redirected Signaling">

<t>In certain circumstances, a DOTS server may want to redirect a DOTS client to
an alternative DOTS server for a DOTS session. Such circumstances include but
are not limited to:</t>

<t><list style="symbols">
  <t>Maximum number of DOTS sessions with clients has been reached;</t>
  <t>Mitigation capacity exhaustion in the mitigator with which the
specific DOTS server is communicating;</t>
  <t>Mitigator outage or other downtime, such as scheduled maintenance;</t>
  <t>Scheduled DOTS server maintenance;</t>
  <t>Scheduled modifications to the network path between DOTS server and DOTS
client.</t>
</list></t>

<t>A basic redirected DOTS session resembles the following, as shown in
<xref target="fig-redirected-signaling"/>.</t>

<figure title="Redirected Signaling" anchor="fig-redirected-signaling"><artwork><![CDATA[
        +-------------+                            +---------------+
        |             |<-(1)--- DOTS session 1 --->|               |
        |             |                            |               |
        |             |<=(2)== redirect to B ======|               |
        | DOTS client |                            | DOTS server A |
        |             |X-(4)--- DOTS session 1 ---X|               |
        |             |                            |               |
        |             |                            |               |
        +-------------+                            +---------------+
               ^
               |
              (3) DOTS session 2
               |
               v
        +---------------+
        | DOTS server B |
        +---------------+
]]></artwork></figure>

<t><list style="numbers">
  <t>Previously established DOTS session 1 exists between a DOTS client and
DOTS server A.</t>
  <t>DOTS server A sends a server signal redirecting the client to DOTS server B.</t>
  <t>If the DOTS client does not already have a separate DOTS session with
the redirection target, the DOTS client initiates and establishes DOTS
session 2 with DOTS server B.</t>
  <t>Having redirected the DOTS client, DOTS server A ceases sending server
signals. The DOTS client likewise stops sending client signals to DOTS server
A. DOTS session 1 is terminated.</t>
</list></t>

</section>
<section anchor="recursive-signaling" title="Recursive Signaling">

<t>DOTS is centered around improving the speed and efficiency of coordinated
response to DDoS attacks. One scenario not yet discussed involves coordination
among federated domains operating DOTS servers and mitigators.</t>

<t>In the course of normal DOTS operations, a DOTS client communicates the need for
mitigation to a DOTS server, and that server initiates mitigation on a
mitigator with which the server has an established service relationship. The
operator of the mitigator may in turn monitor mitigation performance and
capacity, as the attack being mitigated may grow in severity beyond the
mitigating domain's capabilities.</t>

<t>The operator of the mitigator has limited options in the event a DOTS
client-requested mitigation is being overwhelmed by the severity of the attack.
Out-of-scope business or service level agreements may permit the mitigating
domain to drop the mitigation and let attack traffic flow unchecked to the
target, but this only encourages attack escalation. In the case where
the mitigating domain is the upstream service provider for the attack target,
this may mean the mitigating domain and its other services and users continue to
suffer the incidental effects of the attack.</t>

<t>A recursive signaling model as shown in <xref target="fig-recursive-signaling"/> offers
an alternative. In a variation of the use case "End-customer with a single
upstream transit provider offering DDoS mitigation services" described in
<xref target="I-D.ietf-dots-use-cases"></xref>, a domain operating a DOTS server and mitigator also
operates a DOTS client. This DOTS client has an established DOTS session
with a DOTS server belonging to a separate administrative domain.</t>

<t>With these preconditions in place, the operator of the mitigator being
overwhelmed or otherwise performing inadequately may request mitigation for the
attack target from this separate DOTS-aware domain. Such a request recurses the
originating mitigation request to the secondary DOTS server, in the hope of
building a cumulative mitigation against the attack.</t>

<figure title="Recursive Signaling" anchor="fig-recursive-signaling"><artwork><![CDATA[
                     example.net domain
                     . . . . . . . . . . . . . . . . .
                     .    Gn                         .
       +----+    1   .  +----+       +-----------+   .
       | Cc |<--------->| Sn |~~~~~~~| Mitigator |   .
       +----+        .  +====+       |     Mn    |   .
                     .  | Cn |       +-----------+   .
     example.com     .  +----+                       .
        client       .    ^                          .
                     . . .|. . . . . . . . . . . . . .
                          |
                        2 |
                          |
                     . . .|. . . . . . . . . . . . . .
                     .    v                          .
                     .  +----+       +-----------+   .
                     .  | So |~~~~~~~| Mitigator |   .
                     .  +----+       |     Mo    |   .
                     .               +-----------+   .
                     .                               .
                     . . . . . . . . . . . . . . . . .
                     example.org domain
]]></artwork></figure>

<t>In <xref target="fig-recursive-signaling"/>, client Cc signals a request for mitigation
across inter-domain DOTS session 1 to the DOTS server Sn belonging to the
example.net domain. DOTS server Sn enables mitigation on mitigator Mn. DOTS
server Sn is half of DOTS gateway Gn, being deployed logically back-to-back with
DOTS client Cn, which has pre-existing inter-domain DOTS session 2 with the DOTS
server So belonging to the example.org domain. At any point, DOTS server Sn MAY
recurse an on-going mitigation request through DOTS client Cn to DOTS server So,
in the expectation that mitigator Mo will be activated to aid in the defense of
the attack target.</t>

<t>Recursive signaling is opaque to the DOTS client. To maximize mitigation
visibility to the DOTS client, however, the recursing domain SHOULD provide
recursed mitigation feedback in signals reporting on mitigation status to the
DOTS client. For example, the recursing domain's mitigator should incorporate
into mitigation status messages available metrics such as dropped packet or byte
counts from the recursed mitigation.</t>

<t>DOTS clients involved in recursive signaling must be able to withdraw requests
for mitigation without warning or justification, per
<xref target="I-D.ietf-dots-requirements"></xref>.</t>

<t>Operators recursing mitigation requests MAY maintain the recursed mitigation for
a brief, protocol-defined period in the event the DOTS client originating the
mitigation withdraws its request for help, as per the discussion of managing
mitigation toggling in the operational requirements
(<xref target="I-D.ietf-dots-requirements"></xref>).</t>

<t>Deployment of recursive signaling may result in traffic redirection, examination
and mitigation extending beyond the initial bilateral relationship between DOTS
client and DOTS server. As such, client control over the network path of
mitigated traffic may be reduced. DOTS client operators should be aware of any
privacy concerns, and work with DOTS server operators employing recursive
signaling to ensure shared sensitive material is suitably protected.</t>

</section>
<section anchor="anycast-signaling" title="Anycast Signaling">

<t>The DOTS architecture does not assume the availability of anycast within a DOTS
deployment, but neither does the architecture exclude it. Domains operating DOTS
servers MAY deploy DOTS servers with an anycast Service Address as described in
BCP 126 <xref target="RFC4786"></xref>. In such a deployment, DOTS clients connecting to the DOTS
Service Address may be communicating with distinct DOTS servers, depending on
the network configuration at the time the DOTS clients connect.  Among other
benefits, anycast signaling potentially offers the following:</t>

<t><list style="symbols">
  <t>Simplified DOTS client configuration, including service discovery through the
methods described in <xref target="RFC7094"></xref>. In this scenario, the "instance discovery"
message would be a DOTS client initiating a DOTS session to the DOTS server
anycast Service Address, to which the DOTS server would reply with a
redirection to the DOTS server unicast address the client should use for DOTS.</t>
  <t>Region- or customer-specific deployments, in which the DOTS Service Addresses
route to distinct DOTS servers depending on the client region or the customer
network in which a DOTS client resides.</t>
  <t>Operational resiliency, spreading DOTS signaling traffic across the DOTS
server domain's networks, and thereby also reducing the potential attack
surface, as described in BCP 126 <xref target="RFC4786"></xref>.</t>
</list></t>

<section anchor="anycast-signaling-considerations" title="Anycast Signaling Considerations">

<t>As long as network configuration remains stable, anycast DOTS signaling is to
the individual DOTS client indistinct from direct signaling. However, the
operational challenges inherent in anycast signaling are anything but
negligible, and DOTS server operators must carefully weigh the risks against the
benefits before deploying.</t>

<t>While the DOTS signal channel primarily operates over UDP per
<xref target="I-D.ietf-dots-requirements"></xref>, the signal channel also requires mutual
authentication between DOTS agents, with associated security state on both ends.</t>

<t>Network instability is of particular concern with anycast signaling, as DOTS
signal channels are expected to be long-lived, and potentially operating under
congested network conditions caused by a volumetric DDoS attack.</t>

<t>For example, a network configuration altering the route to the DOTS server
during active anycast signaling may cause the DOTS client to send messages to a
DOTS server other than the one with which it initially established a signaling
session. That second DOTS server may not have the security state of the
existing session, forcing the DOTS client to initialize a new DOTS session.
This challenge might in part be mitigated by use of pre-shared keys and session
resumption <xref target="RFC5246"></xref><xref target="RFC6347"/>, but keying material must be available to all
DOTS servers sharing the anycast Service Address in that case.</t>

<t>While the DOTS client will try to establish a new DOTS session with the
DOTS server now acting as the anycast DOTS Service Address, the link between
DOTS client and server may be congested with attack traffic, making signal
session establishment difficult. In such a scenario, anycast Service Address
instability becomes a sort of signal session flapping, with obvious negative
consequences for the DOTS deployment.</t>

<t>Anycast signaling deployments similarly must also take into account active
mitigations. Active mitigations initiated through a DOTS session may involve
diverting traffic to a scrubbing center. If the DOTS session flaps due to
anycast changes as described above, mitigation may also flap as the DOTS servers
sharing the anycast DOTS service address toggles mitigation on detecting
DOTS session loss, depending on whether the client has configured
mitigation on loss of signal.</t>

</section>
</section>
<section anchor="nat-signaling" title="Signaling Considerations for Network Address Translation">

<t>Network address translators (NATs) are expected to be a common feature of DOTS
deployments. The Middlebox Traversal Guidelines in <xref target="RFC8085"></xref> include general
NAT considerations for DOTS deployements when the signal channel is established
over UDP.</t>

<t>Additional DOTS-specific considerations arise when NATs are part of the DOTS
architecture. For example, DDoS attack detection behind a NAT will detect
attacks against internal addresses. A DOTS client subsequently asked to request
mitigation for the attacked scope of addresses cannot reasonably perform the
task, due to the lack of externally routable addresses in the mitigation scope.</t>

<t>The following considerations do not cover all possible scenarios, but are meant
rather to highlight anticipated common issues when signaling through NATs.</t>

<section anchor="direct-provisioning-of-internal-to-external-address-mappings" title="Direct Provisioning of Internal-to-External Address Mappings">

<t>Operators may circumvent the problem of translating internal addresses or
prefixes to externally routable mitigation scopes by directly provisioning the
mappings of external addresses to internal protected resources on the DOTS
client. When the operator requests mitigation scoped for internal addresses,
directly or through automated means, the DOTS client looks up the matching
external addresses or prefixes, and issues a mitigation request scoped to that
externally routable information.</t>

<t>When directly provisioning the address mappings, operators must ensure the
mappings remain up to date, or risk losing the ability to request accurate
mitigation scopes. This document does not prescribe the method by which mappings
are maintained once they are provisioned on the DOTS client.</t>

</section>
<section anchor="resolving-public-mitigation-scope-with-session-traversal-utilities-stun" title="Resolving Public Mitigation Scope with Session Traversal Utilities (STUN)">

<t>Internal resources may discover their external address through a STUN Binding
request/response transaction, as described in <xref target="RFC5389"></xref>. After learning its
reflexive transport address from the STUN server, the internal service can
export its external/internal address pair to the DOTS client, allowing the DOTS
client to request mitigation with the correct external scope, as depicted in
<xref target="fig-nat-stun"/>. The mechanism for provisioning the DOTS client with the
address pair is unspecified.</t>

<figure title="Resolving mitigation scope with STUN" anchor="fig-nat-stun"><artwork><![CDATA[
                Binding         Binding
    +--------+  request  +---+  request  +--------+
    |  STUN  |<----------| N |<----------|  STUN  |
    | server |           | A |           | client |
    |        |---------->| T |---------->|        |
    +--------+  Binding  +---+  Binding  +--------+
                response        response     |
                                             | external/internal
                                             | address pair
                                             v
                                         +--------+
                                         |  DOTS  |
                                         | client |
                                         +--------+
]]></artwork></figure>

</section>
<section anchor="resolving-requested-mitigation-scope-with-dns" title="Resolving Requested Mitigation Scope with DNS">

<t>DOTS supports mitigation scoped to DNS names. As discussed in <xref target="RFC3235"></xref>,
using DNS names instead of IP addresses potentially avoids the address
translation problem, as long as the name is internally and externally
resolvable by the same name. For example, a detected attack's internal target
address can be mapped to a DNS name through a reverse lookup. The DNS name
returned by the reverse lookup can then be provided to the DOTS client as the
external scope for mitigation.</t>

</section>
</section>
</section>
<section anchor="mit-request-triggers" title="Triggering Requests for Mitigation">

<t><xref target="I-D.ietf-dots-requirements"></xref> places no limitation on the circumstances in which
a DOTS client operator may request mitigation, nor does it demand justification
for any mitigation request, thereby reserving operational control over DDoS
defense for the domain requesting mitigation. This architecture likewise does
not prescribe the network conditions and mechanisms triggering a mitigation
request from a DOTS client.</t>

<t>However, considering selected possible mitigation triggers from an architectural
perspective offers a model for alternative or unanticipated triggers for DOTS
deployments. In all cases, what network conditions merit a mitigation request
are at the discretion of the DOTS client operator.</t>

<t>The mitigation request itself is defined by DOTS, however the interfaces
required to trigger the mitigation request in the following scenarios are
implementation-specific.</t>

<section anchor="manual-mit-request" title="Manual Mitigation Request">

<t>A DOTS client operator may manually prepare a request for mitigation, including
scope and duration, and manually instruct the DOTS client to send the mitigation
request to the DOTS server. In context, a manual request is a request directly
issued by the operator without automated decision-making performed by a device
interacting with the DOTS client. Modes of manual mitigation requests include
an operator entering a command into a text interface, or directly interacting
with a graphical interface to send the request.</t>

<t>An operator might do this, for example, in response to notice of an attack
delivered by attack detection equipment or software, and the alerting detector
lacks interfaces or is not configured to use available interfaces to translate
the alert to a mitigation request automatically.</t>

<t>In a variation of the above scenario, the operator may have preconfigured on the
DOTS client mitigation requests for various resources in the operator's domain.
When notified of an attack, the DOTS client operator manually instructs the DOTS
client to send the relevant preconfigured mitigation request for the resources
under attack.</t>

<t>A further variant involves recursive signaling, as described in
<xref target="recursive-signaling"/>. The DOTS client in this case is the second half of a
DOTS gateway (back-to-back DOTS server and client). As in the previous scenario,
the scope and duration of the mitigation request are pre-existing, but in this
case are derived from the mitigation request received from a downstream DOTS
client by the DOTS server. Assuming the preconditions required by
<xref target="recursive-signaling"/> are in place, the DOTS gateway operator may at any time
manually request mitigation from an upstream DOTS server, sending a mitigation
request derived from the downstream DOTS client's request.</t>

<t>The motivations for a DOTS client operator to request mitigation manually are
not prescribed by this architecture, but are expected to include some of the
following:</t>

<t><list style="symbols">
  <t>Notice of an attack delivered via e-mail or alternative messaging</t>
  <t>Notice of an attack delivered via phone call</t>
  <t>Notice of an attack delivered through the interface(s) of networking
monitoring software deployed in the operator's domain</t>
  <t>Manual monitoring of network behavior through network monitoring software</t>
</list></t>

</section>
<section anchor="auto-conditional-mit" title="Automated Conditional Mitigation Request">

<t>Unlike manual mitigation requests, which depend entirely on the DOTS client
operator's capacity to react with speed and accuracy to every detected or
detectable attack, mitigation requests triggered by detected attack conditions
reduce the operational burden on the DOTS client operator, and minimize the
latency between attack detection and the start of mitigation.</t>

<t>Mitigation requests are triggered in this scenario by operator-specified network
conditions. Attack detection is deployment-specific, and not constrained by this
architecture. Similarly the specifics of a condition are left to the discretion
of the operator, though common conditions meriting mitigation include the
following:</t>

<t><list style="symbols">
  <t>Detected attack exceeding a rate in packets per second (pps).</t>
  <t>Detected attack exceeding a rate in bytes per second (bps).</t>
  <t>Detected resource exhaustion in an attack target.</t>
  <t>Detected resource exhaustion in the local domain's mitigator.</t>
  <t>Number of open connections to an attack target.</t>
  <t>Number of attack sources in a given attack.</t>
  <t>Number of active attacks against targets in the operator's domain.</t>
  <t>Conditional detection developed through arbitrary statistical analysis or deep
learning techniques.</t>
  <t>Any combination of the above.</t>
</list></t>

<t>When automated conditional mitigation requests are enabled, violations of any of
the above conditions, or any additional operator-defined conditions, will
trigger a mitigation request from the DOTS client to the DOTS server. The
interfaces between the application detecting the condition violation and the
DOTS client are implementation-specific.</t>

</section>
<section anchor="auto-mit-signal-loss" title="Automated Mitigation on Loss of Signal">

<t>To maintain a DOTS session, the DOTS client and the DOTS server exchange
regular but infrequent messages across the signal channel. In the absence of
an attack, the probability of message loss in the signaling channel should be
extremely low. Under attack conditions, however, some signal loss may be
anticipated as attack traffic congests the link, depending on the attack type.</t>

<t>While <xref target="I-D.ietf-dots-requirements"></xref> specifies the DOTS protocol be robust when
signaling under attack conditions, there are nevertheless scenarios in which the
DOTS signal is lost in spite of protocol best efforts. To handle such scenarios,
a DOTS operator may configure the DOTS session to trigger mitigation
when the DOTS server ceases receiving DOTS client signals (or vice versa) beyond
the miss count or period permitted by the protocol.</t>

<t>The impact of mitigating due to loss of signal in either direction must be
considered carefully before enabling it. Signal loss is not caused by links
congested with attack traffic alone, and as such mitigation requests triggered
by signal channel degradation in either direction may incur unnecessary costs,
in network performance and operational expense alike.</t>

</section>
</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This section describes identified security considerations for the DOTS
architecture.</t>

<t>DOTS is at risk from three primary attack vectors:  agent impersonation,
traffic injection and signal blocking.  These vectors may be exploited
individually or in concert by an attacker to confuse, disable, take information
from, or otherwise inhibit DOTS agents.</t>

<t>Any attacker with the ability to impersonate a legitimate DOTS client or server
or, indeed, inject false messages into the stream may potentially
trigger/withdraw traffic redirection, trigger/cancel mitigation activities or
subvert black/whitelists.  From an architectural standpoint, operators SHOULD
ensure best current practices for secure communication are observed for data and
signal channel confidentiality, integrity and authenticity.  Care must be taken
to ensure transmission is protected by appropriately secure means, reducing
attack surface by exposing only the minimal required services or interfaces.
Similarly, received data at rest SHOULD be stored with a satisfactory degree of
security.</t>

<t>As many mitigation systems employ diversion to scrub attack traffic, operators
of DOTS agents SHOULD ensure DOTS sessions are resistant to Man-in-the-Middle
(MitM) attacks. An attacker with control of a DOTS client may negatively
influence network traffic by requesting and withdrawing requests for mitigation
for particular prefixes, leading to route or DNS flapping.</t>

<t>Any attack targeting the availability of DOTS servers may disrupt the ability
of the system to receive and process DOTS signals resulting in failure to
fulfill a mitigation request.  DOTS agents SHOULD be given adequate protections,
again in accordance with best current practices for network and host security.</t>

</section>
<section anchor="contributors" title="Contributors">

<t><list style="hanging">
  <t hangText='Mohamed Boucadair'><vspace blankLines='0'/>
  Orange</t>
  <t>mohamed.boucadair@orange.com</t>
</list></t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>Thanks to Matt Richardson and Med Boucadair for their comments and suggestions.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;


    </references>

    <references title='Informative References'>

&I-D.ietf-dots-requirements;
&I-D.ietf-dots-use-cases;
&RFC0768;
&RFC0793;
&RFC1035;
&RFC2782;
&RFC3235;
&RFC3261;
&RFC4271;
&RFC4732;
&RFC4786;
&RFC5246;
&RFC5389;
&RFC6347;
&RFC6763;
&RFC7092;
&RFC7094;
&RFC8085;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

